# Copyright (c) 2018, Yaroslav O. Halchenko. All rights reserved. MIT license
#
# The purpose of the Singularity environment is to provide a relatively full
# suite of tools provided primarily by Debian/NeuroDebian for runnin various
# neuroimaging analyses.
#
# Notes:
#  - Due to  https://github.com/singularityware/singularity/issues/471
#    bootstrapping leads to non-usable/non-removable-without-reboot
#    image due to some rogue run away processes.
#    This line could help to kill them but should be used with caution
#    since could kill other unrelated processes
#
#      grep -l loop /proc/*/mountinfo | sed -e 's,/proc/\(.*\)/.*,\1,g' | while read pid; do sudo kill $pid; done
#
# Set size to be 12000 on singularity-hub
#
# Changelog
# ---------
# 10.20200209.1
#  - freezing to a new date.  Currently datalad already demands 7.20190503
#    git-annex so previous one cannot potentially have it.  not sure how
#    benchmarks were "running" without failing in that older environment
#    Current version of annex would be 7.20190819+git2-g908476a9b-1~ndall+1
#    and cannot be newer since newer ones kept causing datalad tests to fail 
#    or to hang
# 10.20190322.1
#  - freezing using WiP nd_freeze to the fixed day (2nd portion of the version)
#    Provided git-annex 7.20190129

BootStrap: debootstrap
OSVersion: buster
MirrorURL: http://http.debian.net/debian/
#MirrorURL: http://smaug.datalad.org:3142/debian/

%environment:
    # for some reason seems to be not present in %post env with 2.6.1-dist
    ENVIRONMENT_FREEZE_DATE=20200209
    ENVIRONMENT_VERSION=10.$ENVIRONMENT_FREEZE_DATE.1

# so if image is executed we just enter the environment
%runscript
    echo "Welcome to the DataLad (Debian) development env $ENVIRONMENT_VERSION environment"
    /bin/bash

%setup
    set -eu
    export | grep SING
    echo "Setting up the environment"
    #apt-get update
    #apt-get -y install python 

    v=`git describe --tags --match sing-\* | sed -e 's,^sing-,,g'`; \
      python -c "import json, os; f='$SINGULARITY_ROOTFS/.singularity.d/labels.json'; j=json.load(open(f)) if os.path.exists(f) else {}; j['SINGULARITY_IMAGE_VERSION']='$v' or '0.0.unknown'; json.dump(j, open(f,'w'),indent=2)"
    chmod a+r "$SINGULARITY_ROOTFS/.singularity.d/labels.json"

%post
    echo "Configuring the environment"
    sed -i -e 's, main$, main contrib non-free,g' /etc/apt/sources.list
    # For build-dep
    sed -i -e 's,^deb \(.*\),deb \1\ndeb-src \1,g' /etc/apt/sources.list
    apt-get update -q --no-allow-insecure-repositories
    apt-get -y install -q --no-install-recommends wget
    TMPBINDIR=/var/tmp
    mkdir -p $TMPBINDIR
    # eatmydata apt-get -y build-dep git
    wget --no-check-certificate  -O $TMPBINDIR/nd-configurerepo -nc \
      https://raw.githubusercontent.com/neurodebian/neurodebian/80f9bd9f59dde8538458fda7286e1fa28a37f6c7/tools/nd-configurerepo
    bash $TMPBINDIR/nd-configurerepo --mirror=default --install 
    chmod a+r -R /etc/apt
    apt-get update -q --no-allow-insecure-repositories
    apt-get install -y neurodebian-freeze
    #export | grep ENV
    nd_freeze 20200209 # $ENVIRONMENT_FREEZE_DATE
    # Needed for debian-security APT
    # echo 'Acquire::Check-Valid-Until "0";' > /etc/apt/apt.conf.d/10no--check-valid-until
    apt-get update --no-allow-insecure-repositories
 
    # Main installations
    apt-get -y install eatmydata 
    eatmydata apt-get -y build-dep datalad
    eatmydata apt-get -y install git vim less python3-pip python3-virtualenv python3-pytest strace gdb valgrind time ncdu gnupg curl procps
    
    chmod a+rX -R /etc/apt/sources.list.d
    # cleaning /tmp that thoroughly might have side effects 
    # rm -rf /tmp/* /var/tmp/*
    apt-get clean
    rm -rf /tmp/npm-* /tmp/nd-config* /tmp/startup* /var/tmp/npm-* /var/lib/apt/lists/*

    # Create some additional bind mount directories present on various compute boxes we have
    # access to, to ease deployment
    mkdir -p /afs /inbox /ihome /opt /data /backup /apps /srv /scratch /idata
    chmod a+rX /afs /inbox /ihome /opt /data /backup /apps /srv /scratch /idata
